Secrets

Utilisé pour stocker des données sensibles telles que les mots de passe.
Similaire à la ConfigMap mais les données sont encodées en base64 et non encryptées

# Créer un Secret depuis un literal (imperative)
kubectl create secret generic app-secret --from-literal=DB_HOST=mysql
                                         --from-literal=DB_USER=root
                                         --from-literal=DB_PASSWORD=paswrd

# Créer un Secret depuis un fichier (imperative)
kubectl create secret generic app-secret --from-file=app_secret.properties

# Créer un Secret (declarative)
kubectl create -f secret-data.yaml
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
data:
  DB_HOST: bXlzcWw=
  DB_USER: cm9vdA==
  DB_PASSWORD: cGFzd3Jk

# Encoder la valeur d'un Secret
echo -n 'mysql' | base64  -> bXlzcWw=
echo -n 'root' | base64   -> cm9vdA==
echo -n 'paswrd' | base64 -> cGFzd3Jk

# Décoder la valeur d'un Secret
echo -n 'bXlzcWw=' | base64 --decode -> mysql
echo -n 'cm9vdA==' | base64 --decode -> root
echo -n 'cGFzd3Jk' | base64 --decode -> paswrd

# Liste des Secrets
kubectl get secrets

# Liste de tous les Secrets et de la taille de leur section data
kubectl describe secret

# Liste d'un Secret et de la taille de la section data
kubectl describe secret app-secret

# Liste d'un Secret et du contenu de la section data
kubectl get secret app-secret -o yaml

# Kubernetes declarative way with Secret (injection en tant que env)
apiVersion: v1
kind: Pod
metadata:
  name: simple-webapp-color
spec:
  containers:
    - name: simple-webapp-color
      image: simple-webapp-color
      ports:
        - containerPort: 8080
      envFrom:
        - secretRef:
            name: app-secret

# Kubernetes declarative way with ConfigMap (injection en tant que single env)
apiVersion: v1
kind: Pod
metadata:
  name: simple-webapp-color
spec:
  containers:
    - name: simple-webapp-color
      image: simple-webapp-color
      ports:
        - containerPort: 8080
      env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_PASSWORD

# Kubernetes declarative way with ConfigMap (injection en tant que volume)
apiVersion: v1
kind: Pod
metadata:
  name: simple-webapp-color
spec:
  containers:
    - name: simple-webapp-color
      image: simple-webapp-color
      ports:
        - containerPort: 8080
  volumes:
    - name: app-secret-volume
      secret:
          secretName: app-secret
